// mixin for fluid typoghraphy using clamp
// accepts values from the DS typography scale
// https://design-system.service.gov.uk/styles/type-scale/
@mixin fluid-font-size($min-size, $cqi-size, $max-size, $tabular: true, $bold: true) {
  $min-size-rem: govuk-px-to-rem($min-size);
  $max-size-rem: govuk-px-to-rem($max-size);
  // for IE11 let's set it to smaller size so that it
  // will not break out
  font-size: #{$min-size}px;
  font-size: #{clamp(#{$min-size-rem}, #{$cqi-size}, #{$max-size-rem})};
  @if $tabular {
    font-variant-numeric: tabular-nums;
  }
  @if $bold {
    font-weight: $govuk-font-weight-bold;
  }

  @include govuk-media-query($until: tablet) {
    font-size: govuk-px-to-rem($min-size);
  }
}

%big-number,
.big-number {

  display: block;

  &-number,
  &-label {
    display: block;
  }

  &-number {
    @include fluid-font-size(32, 18cqi, 48);
  }

  &-label {
    @include govuk-font(19);
    padding-bottom: 10px;
  }

}

.pill .big-number-number {

  // reduce padding until screen is bigger than 420px / zoomed below 300%
  padding-left: govuk-spacing(1);

  @include govuk-media-query($from: 420px) {
    padding-left: govuk-spacing(2);
  }

}

.big-number-dark {
  @extend %big-number;
  container-type: inline-size;
  padding: govuk-spacing(3);
  position: relative;
  background: govuk-colour("black");
  color: govuk-colour("white");

  .big-number-number {
    @include fluid-font-size(24, 18cqi, 36);
  }
}

.big-number-smaller {

  @extend %big-number;
  container-type: inline-size;

  .big-number-number {
    @include fluid-font-size(24, 18cqi, 36);
  }

}

.big-number-smallest {

  @extend %big-number;
  container-type: inline-size;

  .big-number-number {
    @include fluid-font-size(18, 18cqi, 24);
  }

}

.big-number-with-status {

  @extend %big-number;
  position: relative;
  margin-bottom: govuk-spacing(4);

  .big-number,
  .big-number-smaller {
    padding: govuk-spacing(3);
    position: relative;
    background: govuk-colour("black");
    color: govuk-colour("white");
  }

  .big-number-label {

    padding-bottom: 0;

    &:link,
    &:visited {
      color: $govuk-link-colour;
    }

  }

  .big-number-link {

    text-decoration: none;
    background: $govuk-link-colour; // text colour is set in the HTML, with the govuk-link--inverse class
    display: block;
    border: 2px solid $govuk-link-colour;
    margin-bottom: 5px;

    &:hover {

      .big-number-label {
        @include govuk-link-hover-decoration;
      }

    }

    &:active,
    &:focus {
      background: $govuk-focus-colour;
      border: none;
      padding: 2px; /* replace the spacing the border gave */
      /* override the default focus style to inset the underline */
      box-shadow: inset 0 -4px $govuk-focus-text-colour;

      .big-number-number,
      .big-number-smaller,
      .big-number-label {
        color: $govuk-focus-text-colour;
        text-decoration: none;
      }
    }

    .big-number,
    .big-number-smaller {
      background: transparent;
    }

    .big-number-label {
      @include govuk-link-decoration;
    }

  }

  %big-number-status,
  .big-number-status {

    @include govuk-font(19);
    display: block;
    background: govuk-colour("green");
    color: govuk-colour("white");
    padding: 15px;

  }

  // TODO: when the :has() pseudo-class gets enough support we can remove the
  // .big-number-status--with-link and just do .big-number-status:has(> .govuk-link)
  .big-number-status--with-link {
    padding: 0;

    & > .govuk-link {
      display: block;
      padding: 15px;

      // override the default focus style to inset the underline
      &:active,
      &:focus {
        box-shadow: inset 0 -4px $govuk-focus-text-colour;
      }

      // For Safari, which doesn't fire :focus when :active
      &:active {
        text-decoration: none;
        background-color: $govuk-focus-colour;
        color: $govuk-focus-text-colour;
      }

    }
  }

  .big-number-status-failing {
    @extend %big-number-status;
    background: $govuk-error-colour;
  }

}
